@page "/createUser"
@using Blazor.Auth
@using Blazor.Auth.Contracts
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject Blazor.Auth.AuthService AuthService

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Username" Class="mt-3"
                                  @bind-Value="model.Username" For="@(() => model.Username)" />
                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                  @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">login</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to see the success message.
            </MudText>
        </MudItem>
    </MudGrid>
</EditForm>


@code {
    public AuthRequest? model = new AuthRequest();

    public async void OnValidSubmit()
    {
        var authResponse = await AuthService.Login(model!);
        if (authResponse != null)
        {
            await LocalStorage.SetItemAsync("token", authResponse.Token);
            AuthStateProvide.AuthenticatedUser(authResponse.Token);
            NavigationManager.NavigateTo("/");
        }
    }
}